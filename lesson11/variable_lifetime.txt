Внесите 15 правок в свой код с учётом рекомендаций из данного занятия, 
и напишите по каждой, как и что конкретно вы улучшили.


В заадчах 2,3,5,19 переменные инициализированны перед циклом в котором
они используются, тем самым мы снижаем область видимости. Сужаем окно ее уязвисости.

В задаче 25 "Чубакка и гравитационные колодцы" созданы две фунуции со своими переменными.


В задачах OrderedList, HashTable, NativeCache NativeCache делаем переменные приватными
сужая их область видимости

class Node:
    '''
    Класс для представления узла.
    v: данные(число или строка).
    '''

    def __init__(self, val: Any):
        '''Устанавливает все необходимые атрибуты для Node.'''
        self._value = val
        self._prev = None
        self._next = None


class OrderedList:
    '''Класс для представления упорядоченных списков.'''

    def __init__(self, asc):
        '''Иницилизация списка.'''
        self.__head = None
        self.__tail = None
        self.__ascending = asc  # Упорядочение списка по возрастанию

   
class HashTable:
    '''Класс представления хеш-таблицы'''

    def __init__(self, sz: int, stp: int):
        '''Иницилизация хеш-таблицы'''
        self._size = sz   # размер хэш-таблицы
        self._step = stp  # длина шага для поиска следующего свободного слота
        self._slots = [None] * self._size

class NativeDictionary:
    '''Класс представления ассоциативного массива.'''

    def __init__(self, sz: int):
        '''Иницилизация ассоциативного массива.'''
        self._size = sz
        self._slots = [None] * self._size  # для хранения ключей
        self._values = [None] * self._size  # для хранения значений        


class NativeCache:
    def __init__(self, sz):
        self._size = sz  # размер хэш-таблицы
        self._slots = [None] * self._size
        self._values = [None] * self._size
        self._hits = [0] * self._size
        self._number = 17




